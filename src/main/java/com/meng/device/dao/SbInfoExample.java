package com.meng.device.dao;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class SbInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sbinfo
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sbinfo
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sbinfo
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    private Integer limit;

    private Integer offset;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sbinfo
     *
     * @mbg.generated
     */
    public SbInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sbinfo
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sbinfo
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sbinfo
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sbinfo
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sbinfo
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sbinfo
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sbinfo
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sbinfo
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sbinfo
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sbinfo
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public Integer getLimit() {
        return limit;
    }

    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    public Integer getOffset() {
        return offset;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sbinfo
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSbnameIsNull() {
            addCriterion("sbname is null");
            return (Criteria) this;
        }

        public Criteria andSbnameIsNotNull() {
            addCriterion("sbname is not null");
            return (Criteria) this;
        }

        public Criteria andSbnameEqualTo(String value) {
            addCriterion("sbname =", value, "sbname");
            return (Criteria) this;
        }

        public Criteria andSbnameNotEqualTo(String value) {
            addCriterion("sbname <>", value, "sbname");
            return (Criteria) this;
        }

        public Criteria andSbnameGreaterThan(String value) {
            addCriterion("sbname >", value, "sbname");
            return (Criteria) this;
        }

        public Criteria andSbnameGreaterThanOrEqualTo(String value) {
            addCriterion("sbname >=", value, "sbname");
            return (Criteria) this;
        }

        public Criteria andSbnameLessThan(String value) {
            addCriterion("sbname <", value, "sbname");
            return (Criteria) this;
        }

        public Criteria andSbnameLessThanOrEqualTo(String value) {
            addCriterion("sbname <=", value, "sbname");
            return (Criteria) this;
        }

        public Criteria andSbnameLike(String value) {
            addCriterion("sbname like", value, "sbname");
            return (Criteria) this;
        }

        public Criteria andSbnameNotLike(String value) {
            addCriterion("sbname not like", value, "sbname");
            return (Criteria) this;
        }

        public Criteria andSbnameIn(List<String> values) {
            addCriterion("sbname in", values, "sbname");
            return (Criteria) this;
        }

        public Criteria andSbnameNotIn(List<String> values) {
            addCriterion("sbname not in", values, "sbname");
            return (Criteria) this;
        }

        public Criteria andSbnameBetween(String value1, String value2) {
            addCriterion("sbname between", value1, value2, "sbname");
            return (Criteria) this;
        }

        public Criteria andSbnameNotBetween(String value1, String value2) {
            addCriterion("sbname not between", value1, value2, "sbname");
            return (Criteria) this;
        }

        public Criteria andSbscrqIsNull() {
            addCriterion("sbscrq is null");
            return (Criteria) this;
        }

        public Criteria andSbscrqIsNotNull() {
            addCriterion("sbscrq is not null");
            return (Criteria) this;
        }

        public Criteria andSbscrqEqualTo(Date value) {
            addCriterionForJDBCDate("sbscrq =", value, "sbscrq");
            return (Criteria) this;
        }

        public Criteria andSbscrqNotEqualTo(Date value) {
            addCriterionForJDBCDate("sbscrq <>", value, "sbscrq");
            return (Criteria) this;
        }

        public Criteria andSbscrqGreaterThan(Date value) {
            addCriterionForJDBCDate("sbscrq >", value, "sbscrq");
            return (Criteria) this;
        }

        public Criteria andSbscrqGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("sbscrq >=", value, "sbscrq");
            return (Criteria) this;
        }

        public Criteria andSbscrqLessThan(Date value) {
            addCriterionForJDBCDate("sbscrq <", value, "sbscrq");
            return (Criteria) this;
        }

        public Criteria andSbscrqLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("sbscrq <=", value, "sbscrq");
            return (Criteria) this;
        }

        public Criteria andSbscrqIn(List<Date> values) {
            addCriterionForJDBCDate("sbscrq in", values, "sbscrq");
            return (Criteria) this;
        }

        public Criteria andSbscrqNotIn(List<Date> values) {
            addCriterionForJDBCDate("sbscrq not in", values, "sbscrq");
            return (Criteria) this;
        }

        public Criteria andSbscrqBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("sbscrq between", value1, value2, "sbscrq");
            return (Criteria) this;
        }

        public Criteria andSbscrqNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("sbscrq not between", value1, value2, "sbscrq");
            return (Criteria) this;
        }

        public Criteria andSbwyrxbIsNull() {
            addCriterion("sbwyrxb is null");
            return (Criteria) this;
        }

        public Criteria andSbwyrxbIsNotNull() {
            addCriterion("sbwyrxb is not null");
            return (Criteria) this;
        }

        public Criteria andSbwyrxbEqualTo(String value) {
            addCriterion("sbwyrxb =", value, "sbwyrxb");
            return (Criteria) this;
        }

        public Criteria andSbwyrxbNotEqualTo(String value) {
            addCriterion("sbwyrxb <>", value, "sbwyrxb");
            return (Criteria) this;
        }

        public Criteria andSbwyrxbGreaterThan(String value) {
            addCriterion("sbwyrxb >", value, "sbwyrxb");
            return (Criteria) this;
        }

        public Criteria andSbwyrxbGreaterThanOrEqualTo(String value) {
            addCriterion("sbwyrxb >=", value, "sbwyrxb");
            return (Criteria) this;
        }

        public Criteria andSbwyrxbLessThan(String value) {
            addCriterion("sbwyrxb <", value, "sbwyrxb");
            return (Criteria) this;
        }

        public Criteria andSbwyrxbLessThanOrEqualTo(String value) {
            addCriterion("sbwyrxb <=", value, "sbwyrxb");
            return (Criteria) this;
        }

        public Criteria andSbwyrxbLike(String value) {
            addCriterion("sbwyrxb like", value, "sbwyrxb");
            return (Criteria) this;
        }

        public Criteria andSbwyrxbNotLike(String value) {
            addCriterion("sbwyrxb not like", value, "sbwyrxb");
            return (Criteria) this;
        }

        public Criteria andSbwyrxbIn(List<String> values) {
            addCriterion("sbwyrxb in", values, "sbwyrxb");
            return (Criteria) this;
        }

        public Criteria andSbwyrxbNotIn(List<String> values) {
            addCriterion("sbwyrxb not in", values, "sbwyrxb");
            return (Criteria) this;
        }

        public Criteria andSbwyrxbBetween(String value1, String value2) {
            addCriterion("sbwyrxb between", value1, value2, "sbwyrxb");
            return (Criteria) this;
        }

        public Criteria andSbwyrxbNotBetween(String value1, String value2) {
            addCriterion("sbwyrxb not between", value1, value2, "sbwyrxb");
            return (Criteria) this;
        }

        public Criteria andSbjgIsNull() {
            addCriterion("sbjg is null");
            return (Criteria) this;
        }

        public Criteria andSbjgIsNotNull() {
            addCriterion("sbjg is not null");
            return (Criteria) this;
        }

        public Criteria andSbjgEqualTo(Integer value) {
            addCriterion("sbjg =", value, "sbjg");
            return (Criteria) this;
        }

        public Criteria andSbjgNotEqualTo(Integer value) {
            addCriterion("sbjg <>", value, "sbjg");
            return (Criteria) this;
        }

        public Criteria andSbjgGreaterThan(Integer value) {
            addCriterion("sbjg >", value, "sbjg");
            return (Criteria) this;
        }

        public Criteria andSbjgGreaterThanOrEqualTo(Integer value) {
            addCriterion("sbjg >=", value, "sbjg");
            return (Criteria) this;
        }

        public Criteria andSbjgLessThan(Integer value) {
            addCriterion("sbjg <", value, "sbjg");
            return (Criteria) this;
        }

        public Criteria andSbjgLessThanOrEqualTo(Integer value) {
            addCriterion("sbjg <=", value, "sbjg");
            return (Criteria) this;
        }

        public Criteria andSbjgIn(List<Integer> values) {
            addCriterion("sbjg in", values, "sbjg");
            return (Criteria) this;
        }

        public Criteria andSbjgNotIn(List<Integer> values) {
            addCriterion("sbjg not in", values, "sbjg");
            return (Criteria) this;
        }

        public Criteria andSbjgBetween(Integer value1, Integer value2) {
            addCriterion("sbjg between", value1, value2, "sbjg");
            return (Criteria) this;
        }

        public Criteria andSbjgNotBetween(Integer value1, Integer value2) {
            addCriterion("sbjg not between", value1, value2, "sbjg");
            return (Criteria) this;
        }

        public Criteria andSblxIdIsNull() {
            addCriterion("sblx_id is null");
            return (Criteria) this;
        }

        public Criteria andSblxIdIsNotNull() {
            addCriterion("sblx_id is not null");
            return (Criteria) this;
        }

        public Criteria andSblxIdEqualTo(Integer value) {
            addCriterion("sblx_id =", value, "sblxId");
            return (Criteria) this;
        }

        public Criteria andSblxIdNotEqualTo(Integer value) {
            addCriterion("sblx_id <>", value, "sblxId");
            return (Criteria) this;
        }

        public Criteria andSblxIdGreaterThan(Integer value) {
            addCriterion("sblx_id >", value, "sblxId");
            return (Criteria) this;
        }

        public Criteria andSblxIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("sblx_id >=", value, "sblxId");
            return (Criteria) this;
        }

        public Criteria andSblxIdLessThan(Integer value) {
            addCriterion("sblx_id <", value, "sblxId");
            return (Criteria) this;
        }

        public Criteria andSblxIdLessThanOrEqualTo(Integer value) {
            addCriterion("sblx_id <=", value, "sblxId");
            return (Criteria) this;
        }

        public Criteria andSblxIdIn(List<Integer> values) {
            addCriterion("sblx_id in", values, "sblxId");
            return (Criteria) this;
        }

        public Criteria andSblxIdNotIn(List<Integer> values) {
            addCriterion("sblx_id not in", values, "sblxId");
            return (Criteria) this;
        }

        public Criteria andSblxIdBetween(Integer value1, Integer value2) {
            addCriterion("sblx_id between", value1, value2, "sblxId");
            return (Criteria) this;
        }

        public Criteria andSblxIdNotBetween(Integer value1, Integer value2) {
            addCriterion("sblx_id not between", value1, value2, "sblxId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sbinfo
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sbinfo
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}